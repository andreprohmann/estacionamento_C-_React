// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using minimal_api.infraestrutura.Db;

#nullable disable

namespace minimal_api.Migrations.EstacionamentoContextoMigrations
{
    [DbContext(typeof(EstacionamentoContexto))]
    [Migration("20251021000747_InitialCreat")]
    partial class InitialCreat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("minimal_api.dominio.Entidades.Ocupacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime");

                    b.Property<long>("VagaId")
                        .HasColumnType("bigint");

                    b.Property<long>("VeiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VagaId", "CheckOut");

                    b.HasIndex("VeiculoId", "CheckOut");

                    b.ToTable("ocupacao", (string)null);
                });

            modelBuilder.Entity("minimal_api.dominio.Entidades.Vaga", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("vaga", (string)null);
                });

            modelBuilder.Entity("minimal_api.dominio.Entidades.Veiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cor")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("veiculo", (string)null);
                });

            modelBuilder.Entity("minimal_api.dominio.Entidades.Ocupacao", b =>
                {
                    b.HasOne("minimal_api.dominio.Entidades.Vaga", "Vaga")
                        .WithMany("Ocupacoes")
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("minimal_api.dominio.Entidades.Veiculo", "Veiculo")
                        .WithMany("Ocupacoes")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vaga");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("minimal_api.dominio.Entidades.Vaga", b =>
                {
                    b.Navigation("Ocupacoes");
                });

            modelBuilder.Entity("minimal_api.dominio.Entidades.Veiculo", b =>
                {
                    b.Navigation("Ocupacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
